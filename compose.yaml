
services:
  # MySQL Database
  database:
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-crypto_exchange}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER:-app}", "-p${MYSQL_PASSWORD:-password}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/mysql:rw
      - ./docker/mysql/conf.d:/etc/mysql/conf.d:ro
    command: --default-authentication-plugin=mysql_native_password
    
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${APP_TARGET:-dev}
    environment:
      APP_ENV: ${APP_ENV:-dev}
      APP_SECRET: ${APP_SECRET:-your-secret-key-here}
      DATABASE_URL: mysql://${MYSQL_USER:-app}:${MYSQL_PASSWORD:-password}@database:3306/${MYSQL_DATABASE:-crypto_exchange}?serverVersion=${MYSQL_VERSION:-8.0}&charset=utf8mb4
    volumes:
      - .:/var/www/html:rw,cached
      - app_var:/var/www/html/var:rw
    depends_on:
      database:
        condition: service_healthy
    
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    volumes:
      - .:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
      
  # Redis for caching
  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

volumes:
  database_data:
  app_var:
